using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.OpenApi.Models;
using Swashbuckle.AspNetCore.SwaggerGen;
using Swashbuckle.AspNetCore.SwaggerUI;
using System;
using System.IO;
using System.Reflection;

namespace Web
{
    public class SwaggerConfig
    {
        private const string Name = "Geometric Shapes API";

        private const string Version = "v1";

        private static string Endpoint => $"/swagger/{Version}/swagger.json";

        private const string UIEndpoint = "";

        public static void ApplyUI(SwaggerUIOptions config)
        {
            config.RoutePrefix = UIEndpoint;
            config.SwaggerEndpoint(Endpoint, Name);
        }

        public static void Apply(SwaggerGenOptions config)
        {
            config.SwaggerDoc(Version, new OpenApiInfo { Title = Name, Version = Version });

            // Locate the XML file being generated by ASP.NET...
            var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.xml";
            var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);

            if (File.Exists(xmlPath))
            {
                // ... and tell Swagger to use those XML comments.
                config.IncludeXmlComments(xmlPath);
            }
        }
    }
}
